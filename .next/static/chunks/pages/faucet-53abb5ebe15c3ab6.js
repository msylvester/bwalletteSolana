(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[17],{4183:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/faucet",function(){return t(2340)}])},4613:function(n,e,t){"use strict";t.r(e),t.d(e,{connection:function(){return a},createConnection:function(){return r}});var o=t(5893);t(7294);var c=t(9917),i=t(3454);e.default=function(){return(0,o.jsxs)("div",{children:[(0,o.jsx)("h1",{children:"Connection Page"}),(0,o.jsx)("p",{children:"Solana connection configured"})]})};let r=()=>{let n=i.env.NEXT_PUBLIC_SOLANA_RPC_HOST||(0,c.Wf)("devnet");return n===(0,c.Wf)("devnet")?console.warn("Warning: Using public Solana Devnet RPC endpoint (".concat(n,"). ")+"This endpoint is rate-limited and may lead to errors (like 429 Too Many Requests). For reliable performance, consider using a dedicated RPC provider (e.g., Helius, QuickNode, Alchemy) and set the NEXT_PUBLIC_SOLANA_RPC_HOST environment variable."):console.log("Using custom RPC endpoint: ".concat(n)),new c.ew(n,"confirmed")},a=r()},2340:function(n,e,t){"use strict";t.r(e);var o=t(5893),c=t(7294),i=t(9917),r=t(4613);e.default=function(){let[n,e]=(0,c.useState)(""),[t,a]=(0,c.useState)("");async function l(){if(!t){e("Please enter a public key");return}try{e("Funding wallet: ".concat(t)),console.log("Funding wallet: ".concat(t));let n=await r.connection.requestAirdrop(t,1*i.j5);await r.connection.confirmTransaction(n),e("Wallet funded!"),console.log("Wallet funded!")}catch(n){e("Error: ".concat(n.message)),console.error(n)}}return(0,o.jsxs)("div",{children:[(0,o.jsx)("h1",{children:"Solana Faucet"}),(0,o.jsxs)("div",{children:[(0,o.jsx)("input",{type:"text",placeholder:"Enter wallet public key",value:t,onChange:n=>a(n.target.value)}),(0,o.jsx)("button",{onClick:l,children:"Fund Wallet"})]}),(0,o.jsx)("div",{children:n})]})}},6601:function(){}},function(n){n.O(0,[766,474,888,774,179],function(){return n(n.s=4183)}),_N_E=n.O()}]);